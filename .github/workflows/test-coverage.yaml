# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Test coverage
        run: |
          # Run coverage with covr
          library(covr)
          cov <- package_coverage(
            type = "tests",
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )

          # Print coverage summary
          print(cov)

          # Calculate coverage percentage
          percent <- percent_coverage(cov)

          # Handle data packages with no R code
          if (is.nan(percent) || is.null(percent)) {
            cat("\n====================================\n")
            cat("DATA PACKAGE - No executable R code\n")
            cat("Tests verify data integrity only\n")
            cat("====================================\n\n")
            # For data packages, we still generate a report showing tests pass
            percent <- 0
          } else {
            cat("\n====================================\n")
            cat("TOTAL CODE COVERAGE:", round(percent, 2), "%\n")
            cat("====================================\n\n")
          }

          # Use codecov() function from covr package - this is the recommended way
          # It automatically generates and uploads the coverage report
          codecov(
            coverage = cov,
            token = Sys.getenv("CODECOV_TOKEN"),
            quiet = FALSE
          )
        shell: Rscript {0}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Demografiando/verdadecu
          fail_ci_if_error: false
          verbose: true